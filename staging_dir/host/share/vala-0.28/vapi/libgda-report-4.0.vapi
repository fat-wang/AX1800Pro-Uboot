/* libgda-report-4.0.vapi generated by vapigen, do not modify. */

[Deprecated (replacement = "bindings distributed with libgda-4.0", since = "4.2.13")]
namespace Gda {
	[CCode (cheader_filename = "libgda-report/libgda-report.h")]
	public class ReportDocbookDocument : Gda.ReportDocument {
		[CCode (has_construct_function = false, type = "GdaReportDocument*")]
		public ReportDocbookDocument (Gda.ReportEngine engine);
		[NoAccessorMethod]
		public string fo_stylesheet { owned get; set; }
		[NoAccessorMethod]
		public string fop_path { owned get; set; }
		[NoAccessorMethod]
		public string html_stylesheet { owned get; set; }
		[NoAccessorMethod]
		public string java_home { owned get; set; }
	}
	[CCode (cheader_filename = "libgda-report/libgda-report.h")]
	public class ReportDocument : GLib.Object {
		[CCode (has_construct_function = false)]
		protected ReportDocument ();
		public virtual bool run_as_html (string filename) throws GLib.Error;
		public virtual bool run_as_pdf (string filename) throws GLib.Error;
		public void set_template (string file);
		[NoAccessorMethod]
		public Gda.ReportEngine engine { owned get; set; }
		public string template { set; }
	}
	[CCode (cheader_filename = "libgda-report/libgda-report.h")]
	public class ReportEngine : GLib.Object {
		[CCode (has_construct_function = false)]
		public ReportEngine (Xml.Node spec_node);
		public void declare_object (GLib.Object object, string obj_name);
		public unowned GLib.Object find_declared_object (GLib.Type obj_type, string obj_name);
		[CCode (has_construct_function = false)]
		public ReportEngine.from_file (string spec_file_name);
		[CCode (has_construct_function = false)]
		public ReportEngine.from_string (string spec_string);
		public unowned Xml.Node run_as_doc () throws GLib.Error;
		public unowned Xml.Node run_as_node () throws GLib.Error;
		[NoAccessorMethod]
		public void* spec { get; set; }
		[NoAccessorMethod]
		public string spec_filename { set; }
		[NoAccessorMethod]
		public string spec_string { set; }
	}
	[CCode (cheader_filename = "libgda-report/libgda-report.h")]
	public class ReportRmlDocument : Gda.ReportDocument {
		[CCode (has_construct_function = false, type = "GdaReportDocument*")]
		public ReportRmlDocument (Gda.ReportEngine engine);
	}
}
